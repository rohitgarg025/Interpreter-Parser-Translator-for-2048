Grammar

    0 $accept: program $end

    1 program: %empty
    2        | EXIT
    3        | assignment
    4        | naming
    5        | query
    6        | move
    7        | NEWLINE
    8        | incomplete NEWLINE
    9        | VAR keyword IS NUM COMMA NUM DOT NEWLINE
   10        | error NEWLINE

   11 assignment: ASSIGN NUM TO NUM COMMA NUM DOT NEWLINE

   12 naming: VAR ID IS NUM COMMA NUM DOT NEWLINE

   13 query: VALUE IN NUM COMMA NUM DOT NEWLINE

   14 move: ADD UP DOT NEWLINE
   15     | ADD DOWN DOT NEWLINE
   16     | ADD RIGHT DOT NEWLINE
   17     | ADD LEFT DOT NEWLINE
   18     | SUB UP DOT NEWLINE
   19     | SUB DOWN DOT NEWLINE
   20     | SUB RIGHT DOT NEWLINE
   21     | SUB LEFT DOT NEWLINE
   22     | MUL UP DOT NEWLINE
   23     | MUL DOWN DOT NEWLINE
   24     | MUL RIGHT DOT NEWLINE
   25     | MUL LEFT DOT NEWLINE
   26     | DIV UP DOT NEWLINE
   27     | DIV DOWN DOT NEWLINE
   28     | DIV RIGHT DOT NEWLINE
   29     | DIV LEFT DOT NEWLINE

   30 keyword: ADD
   31        | SUB
   32        | MUL
   33        | DIV
   34        | LEFT
   35        | RIGHT
   36        | UP
   37        | DOWN
   38        | ASSIGN
   39        | TO
   40        | VAR
   41        | IS
   42        | VALUE
   43        | IN
   44        | DOT
   45        | COMMA
   46        | EXIT

   47 incomplete: ADD UP
   48           | ADD DOWN
   49           | ADD RIGHT
   50           | ADD LEFT
   51           | SUB UP
   52           | SUB DOWN
   53           | SUB RIGHT
   54           | SUB LEFT
   55           | MUL UP
   56           | MUL DOWN
   57           | MUL RIGHT
   58           | MUL LEFT
   59           | DIV UP
   60           | DIV DOWN
   61           | DIV RIGHT
   62           | DIV LEFT
   63           | VALUE IN NUM COMMA NUM
   64           | VAR ID IS NUM COMMA NUM
   65           | ASSIGN NUM TO NUM COMMA NUM


Terminals, with rules where they appear

    $end (0) 0
    error (256) 10
    ADD <str> (258) 14 15 16 17 30 47 48 49 50
    SUB <str> (259) 18 19 20 21 31 51 52 53 54
    MUL <str> (260) 22 23 24 25 32 55 56 57 58
    DIV <str> (261) 26 27 28 29 33 59 60 61 62
    LEFT <str> (262) 17 21 25 29 34 50 54 58 62
    RIGHT <str> (263) 16 20 24 28 35 49 53 57 61
    UP <str> (264) 14 18 22 26 36 47 51 55 59
    DOWN <str> (265) 15 19 23 27 37 48 52 56 60
    ASSIGN <str> (266) 11 38 65
    TO <str> (267) 11 39 65
    VAR <str> (268) 9 12 40 64
    IS <str> (269) 9 12 41 64
    VALUE <str> (270) 13 42 63
    IN <str> (271) 13 43 63
    DOT <str> (272) 9 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 44
    COMMA <str> (273) 9 11 12 13 45 63 64 65
    ID <str> (274) 12 64
    EXIT <str> (275) 2 46
    NEWLINE <str> (276) 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29
    NUM <num> (277) 9 11 12 13 63 64 65


Nonterminals, with rules where they appear

    $accept (23)
        on left: 0
    program (24)
        on left: 1 2 3 4 5 6 7 8 9 10
        on right: 0
    assignment (25)
        on left: 11
        on right: 3
    naming (26)
        on left: 12
        on right: 4
    query (27)
        on left: 13
        on right: 5
    move (28)
        on left: 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29
        on right: 6
    keyword (29)
        on left: 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46
        on right: 9
    incomplete (30)
        on left: 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65
        on right: 8


State 0

    0 $accept: . program $end

    error    shift, and go to state 1
    ADD      shift, and go to state 2
    SUB      shift, and go to state 3
    MUL      shift, and go to state 4
    DIV      shift, and go to state 5
    ASSIGN   shift, and go to state 6
    VAR      shift, and go to state 7
    VALUE    shift, and go to state 8
    EXIT     shift, and go to state 9
    NEWLINE  shift, and go to state 10

    $end  reduce using rule 1 (program)

    program     go to state 11
    assignment  go to state 12
    naming      go to state 13
    query       go to state 14
    move        go to state 15
    incomplete  go to state 16


State 1

   10 program: error . NEWLINE

    NEWLINE  shift, and go to state 17


State 2

   14 move: ADD . UP DOT NEWLINE
   15     | ADD . DOWN DOT NEWLINE
   16     | ADD . RIGHT DOT NEWLINE
   17     | ADD . LEFT DOT NEWLINE
   47 incomplete: ADD . UP
   48           | ADD . DOWN
   49           | ADD . RIGHT
   50           | ADD . LEFT

    LEFT   shift, and go to state 18
    RIGHT  shift, and go to state 19
    UP     shift, and go to state 20
    DOWN   shift, and go to state 21


State 3

   18 move: SUB . UP DOT NEWLINE
   19     | SUB . DOWN DOT NEWLINE
   20     | SUB . RIGHT DOT NEWLINE
   21     | SUB . LEFT DOT NEWLINE
   51 incomplete: SUB . UP
   52           | SUB . DOWN
   53           | SUB . RIGHT
   54           | SUB . LEFT

    LEFT   shift, and go to state 22
    RIGHT  shift, and go to state 23
    UP     shift, and go to state 24
    DOWN   shift, and go to state 25


State 4

   22 move: MUL . UP DOT NEWLINE
   23     | MUL . DOWN DOT NEWLINE
   24     | MUL . RIGHT DOT NEWLINE
   25     | MUL . LEFT DOT NEWLINE
   55 incomplete: MUL . UP
   56           | MUL . DOWN
   57           | MUL . RIGHT
   58           | MUL . LEFT

    LEFT   shift, and go to state 26
    RIGHT  shift, and go to state 27
    UP     shift, and go to state 28
    DOWN   shift, and go to state 29


State 5

   26 move: DIV . UP DOT NEWLINE
   27     | DIV . DOWN DOT NEWLINE
   28     | DIV . RIGHT DOT NEWLINE
   29     | DIV . LEFT DOT NEWLINE
   59 incomplete: DIV . UP
   60           | DIV . DOWN
   61           | DIV . RIGHT
   62           | DIV . LEFT

    LEFT   shift, and go to state 30
    RIGHT  shift, and go to state 31
    UP     shift, and go to state 32
    DOWN   shift, and go to state 33


State 6

   11 assignment: ASSIGN . NUM TO NUM COMMA NUM DOT NEWLINE
   65 incomplete: ASSIGN . NUM TO NUM COMMA NUM

    NUM  shift, and go to state 34


State 7

    9 program: VAR . keyword IS NUM COMMA NUM DOT NEWLINE
   12 naming: VAR . ID IS NUM COMMA NUM DOT NEWLINE
   64 incomplete: VAR . ID IS NUM COMMA NUM

    ADD     shift, and go to state 35
    SUB     shift, and go to state 36
    MUL     shift, and go to state 37
    DIV     shift, and go to state 38
    LEFT    shift, and go to state 39
    RIGHT   shift, and go to state 40
    UP      shift, and go to state 41
    DOWN    shift, and go to state 42
    ASSIGN  shift, and go to state 43
    TO      shift, and go to state 44
    VAR     shift, and go to state 45
    IS      shift, and go to state 46
    VALUE   shift, and go to state 47
    IN      shift, and go to state 48
    DOT     shift, and go to state 49
    COMMA   shift, and go to state 50
    ID      shift, and go to state 51
    EXIT    shift, and go to state 52

    keyword  go to state 53


State 8

   13 query: VALUE . IN NUM COMMA NUM DOT NEWLINE
   63 incomplete: VALUE . IN NUM COMMA NUM

    IN  shift, and go to state 54


State 9

    2 program: EXIT .

    $default  reduce using rule 2 (program)


State 10

    7 program: NEWLINE .

    $default  reduce using rule 7 (program)


State 11

    0 $accept: program . $end

    $end  shift, and go to state 55


State 12

    3 program: assignment .

    $default  reduce using rule 3 (program)


State 13

    4 program: naming .

    $default  reduce using rule 4 (program)


State 14

    5 program: query .

    $default  reduce using rule 5 (program)


State 15

    6 program: move .

    $default  reduce using rule 6 (program)


State 16

    8 program: incomplete . NEWLINE

    NEWLINE  shift, and go to state 56


State 17

   10 program: error NEWLINE .

    $default  reduce using rule 10 (program)


State 18

   17 move: ADD LEFT . DOT NEWLINE
   50 incomplete: ADD LEFT .

    DOT  shift, and go to state 57

    $default  reduce using rule 50 (incomplete)


State 19

   16 move: ADD RIGHT . DOT NEWLINE
   49 incomplete: ADD RIGHT .

    DOT  shift, and go to state 58

    $default  reduce using rule 49 (incomplete)


State 20

   14 move: ADD UP . DOT NEWLINE
   47 incomplete: ADD UP .

    DOT  shift, and go to state 59

    $default  reduce using rule 47 (incomplete)


State 21

   15 move: ADD DOWN . DOT NEWLINE
   48 incomplete: ADD DOWN .

    DOT  shift, and go to state 60

    $default  reduce using rule 48 (incomplete)


State 22

   21 move: SUB LEFT . DOT NEWLINE
   54 incomplete: SUB LEFT .

    DOT  shift, and go to state 61

    $default  reduce using rule 54 (incomplete)


State 23

   20 move: SUB RIGHT . DOT NEWLINE
   53 incomplete: SUB RIGHT .

    DOT  shift, and go to state 62

    $default  reduce using rule 53 (incomplete)


State 24

   18 move: SUB UP . DOT NEWLINE
   51 incomplete: SUB UP .

    DOT  shift, and go to state 63

    $default  reduce using rule 51 (incomplete)


State 25

   19 move: SUB DOWN . DOT NEWLINE
   52 incomplete: SUB DOWN .

    DOT  shift, and go to state 64

    $default  reduce using rule 52 (incomplete)


State 26

   25 move: MUL LEFT . DOT NEWLINE
   58 incomplete: MUL LEFT .

    DOT  shift, and go to state 65

    $default  reduce using rule 58 (incomplete)


State 27

   24 move: MUL RIGHT . DOT NEWLINE
   57 incomplete: MUL RIGHT .

    DOT  shift, and go to state 66

    $default  reduce using rule 57 (incomplete)


State 28

   22 move: MUL UP . DOT NEWLINE
   55 incomplete: MUL UP .

    DOT  shift, and go to state 67

    $default  reduce using rule 55 (incomplete)


State 29

   23 move: MUL DOWN . DOT NEWLINE
   56 incomplete: MUL DOWN .

    DOT  shift, and go to state 68

    $default  reduce using rule 56 (incomplete)


State 30

   29 move: DIV LEFT . DOT NEWLINE
   62 incomplete: DIV LEFT .

    DOT  shift, and go to state 69

    $default  reduce using rule 62 (incomplete)


State 31

   28 move: DIV RIGHT . DOT NEWLINE
   61 incomplete: DIV RIGHT .

    DOT  shift, and go to state 70

    $default  reduce using rule 61 (incomplete)


State 32

   26 move: DIV UP . DOT NEWLINE
   59 incomplete: DIV UP .

    DOT  shift, and go to state 71

    $default  reduce using rule 59 (incomplete)


State 33

   27 move: DIV DOWN . DOT NEWLINE
   60 incomplete: DIV DOWN .

    DOT  shift, and go to state 72

    $default  reduce using rule 60 (incomplete)


State 34

   11 assignment: ASSIGN NUM . TO NUM COMMA NUM DOT NEWLINE
   65 incomplete: ASSIGN NUM . TO NUM COMMA NUM

    TO  shift, and go to state 73


State 35

   30 keyword: ADD .

    $default  reduce using rule 30 (keyword)


State 36

   31 keyword: SUB .

    $default  reduce using rule 31 (keyword)


State 37

   32 keyword: MUL .

    $default  reduce using rule 32 (keyword)


State 38

   33 keyword: DIV .

    $default  reduce using rule 33 (keyword)


State 39

   34 keyword: LEFT .

    $default  reduce using rule 34 (keyword)


State 40

   35 keyword: RIGHT .

    $default  reduce using rule 35 (keyword)


State 41

   36 keyword: UP .

    $default  reduce using rule 36 (keyword)


State 42

   37 keyword: DOWN .

    $default  reduce using rule 37 (keyword)


State 43

   38 keyword: ASSIGN .

    $default  reduce using rule 38 (keyword)


State 44

   39 keyword: TO .

    $default  reduce using rule 39 (keyword)


State 45

   40 keyword: VAR .

    $default  reduce using rule 40 (keyword)


State 46

   41 keyword: IS .

    $default  reduce using rule 41 (keyword)


State 47

   42 keyword: VALUE .

    $default  reduce using rule 42 (keyword)


State 48

   43 keyword: IN .

    $default  reduce using rule 43 (keyword)


State 49

   44 keyword: DOT .

    $default  reduce using rule 44 (keyword)


State 50

   45 keyword: COMMA .

    $default  reduce using rule 45 (keyword)


State 51

   12 naming: VAR ID . IS NUM COMMA NUM DOT NEWLINE
   64 incomplete: VAR ID . IS NUM COMMA NUM

    IS  shift, and go to state 74


State 52

   46 keyword: EXIT .

    $default  reduce using rule 46 (keyword)


State 53

    9 program: VAR keyword . IS NUM COMMA NUM DOT NEWLINE

    IS  shift, and go to state 75


State 54

   13 query: VALUE IN . NUM COMMA NUM DOT NEWLINE
   63 incomplete: VALUE IN . NUM COMMA NUM

    NUM  shift, and go to state 76


State 55

    0 $accept: program $end .

    $default  accept


State 56

    8 program: incomplete NEWLINE .

    $default  reduce using rule 8 (program)


State 57

   17 move: ADD LEFT DOT . NEWLINE

    NEWLINE  shift, and go to state 77


State 58

   16 move: ADD RIGHT DOT . NEWLINE

    NEWLINE  shift, and go to state 78


State 59

   14 move: ADD UP DOT . NEWLINE

    NEWLINE  shift, and go to state 79


State 60

   15 move: ADD DOWN DOT . NEWLINE

    NEWLINE  shift, and go to state 80


State 61

   21 move: SUB LEFT DOT . NEWLINE

    NEWLINE  shift, and go to state 81


State 62

   20 move: SUB RIGHT DOT . NEWLINE

    NEWLINE  shift, and go to state 82


State 63

   18 move: SUB UP DOT . NEWLINE

    NEWLINE  shift, and go to state 83


State 64

   19 move: SUB DOWN DOT . NEWLINE

    NEWLINE  shift, and go to state 84


State 65

   25 move: MUL LEFT DOT . NEWLINE

    NEWLINE  shift, and go to state 85


State 66

   24 move: MUL RIGHT DOT . NEWLINE

    NEWLINE  shift, and go to state 86


State 67

   22 move: MUL UP DOT . NEWLINE

    NEWLINE  shift, and go to state 87


State 68

   23 move: MUL DOWN DOT . NEWLINE

    NEWLINE  shift, and go to state 88


State 69

   29 move: DIV LEFT DOT . NEWLINE

    NEWLINE  shift, and go to state 89


State 70

   28 move: DIV RIGHT DOT . NEWLINE

    NEWLINE  shift, and go to state 90


State 71

   26 move: DIV UP DOT . NEWLINE

    NEWLINE  shift, and go to state 91


State 72

   27 move: DIV DOWN DOT . NEWLINE

    NEWLINE  shift, and go to state 92


State 73

   11 assignment: ASSIGN NUM TO . NUM COMMA NUM DOT NEWLINE
   65 incomplete: ASSIGN NUM TO . NUM COMMA NUM

    NUM  shift, and go to state 93


State 74

   12 naming: VAR ID IS . NUM COMMA NUM DOT NEWLINE
   64 incomplete: VAR ID IS . NUM COMMA NUM

    NUM  shift, and go to state 94


State 75

    9 program: VAR keyword IS . NUM COMMA NUM DOT NEWLINE

    NUM  shift, and go to state 95


State 76

   13 query: VALUE IN NUM . COMMA NUM DOT NEWLINE
   63 incomplete: VALUE IN NUM . COMMA NUM

    COMMA  shift, and go to state 96


State 77

   17 move: ADD LEFT DOT NEWLINE .

    $default  reduce using rule 17 (move)


State 78

   16 move: ADD RIGHT DOT NEWLINE .

    $default  reduce using rule 16 (move)


State 79

   14 move: ADD UP DOT NEWLINE .

    $default  reduce using rule 14 (move)


State 80

   15 move: ADD DOWN DOT NEWLINE .

    $default  reduce using rule 15 (move)


State 81

   21 move: SUB LEFT DOT NEWLINE .

    $default  reduce using rule 21 (move)


State 82

   20 move: SUB RIGHT DOT NEWLINE .

    $default  reduce using rule 20 (move)


State 83

   18 move: SUB UP DOT NEWLINE .

    $default  reduce using rule 18 (move)


State 84

   19 move: SUB DOWN DOT NEWLINE .

    $default  reduce using rule 19 (move)


State 85

   25 move: MUL LEFT DOT NEWLINE .

    $default  reduce using rule 25 (move)


State 86

   24 move: MUL RIGHT DOT NEWLINE .

    $default  reduce using rule 24 (move)


State 87

   22 move: MUL UP DOT NEWLINE .

    $default  reduce using rule 22 (move)


State 88

   23 move: MUL DOWN DOT NEWLINE .

    $default  reduce using rule 23 (move)


State 89

   29 move: DIV LEFT DOT NEWLINE .

    $default  reduce using rule 29 (move)


State 90

   28 move: DIV RIGHT DOT NEWLINE .

    $default  reduce using rule 28 (move)


State 91

   26 move: DIV UP DOT NEWLINE .

    $default  reduce using rule 26 (move)


State 92

   27 move: DIV DOWN DOT NEWLINE .

    $default  reduce using rule 27 (move)


State 93

   11 assignment: ASSIGN NUM TO NUM . COMMA NUM DOT NEWLINE
   65 incomplete: ASSIGN NUM TO NUM . COMMA NUM

    COMMA  shift, and go to state 97


State 94

   12 naming: VAR ID IS NUM . COMMA NUM DOT NEWLINE
   64 incomplete: VAR ID IS NUM . COMMA NUM

    COMMA  shift, and go to state 98


State 95

    9 program: VAR keyword IS NUM . COMMA NUM DOT NEWLINE

    COMMA  shift, and go to state 99


State 96

   13 query: VALUE IN NUM COMMA . NUM DOT NEWLINE
   63 incomplete: VALUE IN NUM COMMA . NUM

    NUM  shift, and go to state 100


State 97

   11 assignment: ASSIGN NUM TO NUM COMMA . NUM DOT NEWLINE
   65 incomplete: ASSIGN NUM TO NUM COMMA . NUM

    NUM  shift, and go to state 101


State 98

   12 naming: VAR ID IS NUM COMMA . NUM DOT NEWLINE
   64 incomplete: VAR ID IS NUM COMMA . NUM

    NUM  shift, and go to state 102


State 99

    9 program: VAR keyword IS NUM COMMA . NUM DOT NEWLINE

    NUM  shift, and go to state 103


State 100

   13 query: VALUE IN NUM COMMA NUM . DOT NEWLINE
   63 incomplete: VALUE IN NUM COMMA NUM .

    DOT  shift, and go to state 104

    $default  reduce using rule 63 (incomplete)


State 101

   11 assignment: ASSIGN NUM TO NUM COMMA NUM . DOT NEWLINE
   65 incomplete: ASSIGN NUM TO NUM COMMA NUM .

    DOT  shift, and go to state 105

    $default  reduce using rule 65 (incomplete)


State 102

   12 naming: VAR ID IS NUM COMMA NUM . DOT NEWLINE
   64 incomplete: VAR ID IS NUM COMMA NUM .

    DOT  shift, and go to state 106

    $default  reduce using rule 64 (incomplete)


State 103

    9 program: VAR keyword IS NUM COMMA NUM . DOT NEWLINE

    DOT  shift, and go to state 107


State 104

   13 query: VALUE IN NUM COMMA NUM DOT . NEWLINE

    NEWLINE  shift, and go to state 108


State 105

   11 assignment: ASSIGN NUM TO NUM COMMA NUM DOT . NEWLINE

    NEWLINE  shift, and go to state 109


State 106

   12 naming: VAR ID IS NUM COMMA NUM DOT . NEWLINE

    NEWLINE  shift, and go to state 110


State 107

    9 program: VAR keyword IS NUM COMMA NUM DOT . NEWLINE

    NEWLINE  shift, and go to state 111


State 108

   13 query: VALUE IN NUM COMMA NUM DOT NEWLINE .

    $default  reduce using rule 13 (query)


State 109

   11 assignment: ASSIGN NUM TO NUM COMMA NUM DOT NEWLINE .

    $default  reduce using rule 11 (assignment)


State 110

   12 naming: VAR ID IS NUM COMMA NUM DOT NEWLINE .

    $default  reduce using rule 12 (naming)


State 111

    9 program: VAR keyword IS NUM COMMA NUM DOT NEWLINE .

    $default  reduce using rule 9 (program)
